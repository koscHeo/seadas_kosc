
        interface
           subroutine dump_hdf5(filename, dsetname, data_dims, buffer)
           USE HDF5             ! This module contains all necessary modules 
           character(len=*), intent (in) :: filename
           character(len=*), intent (in) :: dsetname

           INTEGER(HSIZE_T), DIMENSION(:) :: data_dims

           REAL*4, POINTER :: buffer
 
           end subroutine dump_hdf5
        end interface


        interface
           subroutine dump_hdf5_int(filename, dsetname, data_dims, buffer)
           USE HDF5             ! This module contains all necessary modules 
           character(len=*), intent (in) :: filename
           character(len=*), intent (in) :: dsetname

           INTEGER(HSIZE_T), DIMENSION(:) :: data_dims

           INTEGER*4, POINTER :: buffer
 
           end subroutine dump_hdf5_int
        end interface


        interface
           subroutine open_hdf5(filename, dsetname, file_id, dset_id)

           USE HDF5             ! This module contains all necessary modules 
           character(len=*), intent (in) :: filename
           character(len=*), intent (in) :: dsetname

           INTEGER(HID_T) :: file_id ! File identifier 
           INTEGER(HID_T) :: dset_id ! Dataset identifier 
           end subroutine open_hdf5

           subroutine read_hdf5_real(dset_id, filespace, dataspace, offset, count, buffer)

           USE HDF5             ! This module contains all necessary modules 
           INTEGER(HID_T) :: dset_id ! Dataset identifier 
           INTEGER(HID_T) :: filespace
           INTEGER(HID_T) :: dataspace
           INTEGER(HSIZE_T), DIMENSION(:) :: offset
           INTEGER(HSIZE_T), DIMENSION(:) :: count
           real*4, POINTER :: buffer
           end subroutine read_hdf5_real

           subroutine set_space_hdf5(dset_id, rank, count, filespace, dataspace)

           USE HDF5             ! This module contains all necessary modules 
           INTEGER(HID_T) :: dset_id ! Dataset identifier 
           INTEGER :: rank
           INTEGER(HSIZE_T), DIMENSION(:) :: count
           INTEGER(HID_T) :: filespace
           INTEGER(HID_T) :: dataspace
           end subroutine set_space_hdf5
        end interface

        interface
           subroutine create_hdf5(filename, file_id)
           USE HDF5 ! This module contains all necessary modules 
           character(len=*), intent (in) :: filename
           INTEGER(HID_T) :: file_id       ! File identifier 
           end subroutine create_hdf5

           subroutine create_hdf5_real(file_id, dsetname, rank, dims, dset_id)
           USE HDF5 ! This module contains all necessary modules 
           INTEGER(HID_T), intent (in) :: file_id       ! File identifier 
           character(len=*), intent (in) :: dsetname
           INTEGER :: rank
           INTEGER(HSIZE_T), DIMENSION(:) :: dims
           INTEGER(HID_T) :: dset_id       ! Dataset identifier 
           INTEGER(HID_T) :: dspace_id     ! Dataspace identifier
           end subroutine create_hdf5_real

           subroutine write_hdf5_real(dset_id, filespace, dataspace, offset, count, buffer)
           USE HDF5 ! This module contains all necessary modules 
           INTEGER(HID_T) :: dset_id       ! Dataset identifier 
           INTEGER(HID_T) :: filespace
           INTEGER(HID_T) :: dataspace

           INTEGER(HSIZE_T), DIMENSION(:) :: offset
           INTEGER(HSIZE_T), DIMENSION(:) :: count
           REAL*4, POINTER :: buffer
           end subroutine write_hdf5_real

           subroutine close_hdf5_ds(dset_id, dataspace, filespace)
           USE HDF5 ! This module contains all necessary modules 
           INTEGER(HID_T) :: dset_id       ! Dataset identifier 
           INTEGER(HID_T) :: filespace
           INTEGER(HID_T) :: dataspace
           end subroutine close_hdf5_ds

           subroutine close_hdf5_df(file_id)
           USE HDF5 ! This module contains all necessary modules 
           INTEGER(HID_T) :: file_id       ! File identifier 
           end subroutine close_hdf5_df
        end interface
